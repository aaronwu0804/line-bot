#!/usr/bin/env python3
# filepath: /Users/al02451008/Documents/code/morning-post/src/test_pinterest.py
"""
直接下載圖片模組（取代原 Pinterest 爬蟲）
使用可靠的圖床服務直接獲取圖片，避免網站爬蟲問題
優先使用含有明確早安文字的圖片
"""

import os
import random
import requests
import logging
from datetime import datetime

logger = logging.getLogger(__name__)

def get_direct_image():
    """直接從可靠圖庫獲取高品質圖片，優先使用含早安文字的Pinterest圖片"""
    images = [
        # Pinterest 早安文字圖片優先 (含明確早安/Good Morning 文字)
        "https://i.pinimg.com/originals/e5/73/7c/e5737c44dd061635766b6682a3e42d69.jpg",  # 早安花朵文字
        "https://i.pinimg.com/originals/11/32/7a/11327a45919c5d5104a4ce9eecae58d4.jpg",  # 水彩風格早安
        "https://i.pinimg.com/originals/69/6a/7e/696a7e415b405bd58b6b8c82e2d8d7ff.jpg",  # 早安咖啡文字
        "https://i.pinimg.com/originals/aa/47/60/aa4760f6bee12654d39f576ceadfaa4c.jpg",  # 早安花朵與文字
        "https://i.pinimg.com/originals/64/f8/f2/64f8f2cd3fa0affd248a5d140260f490.jpg",  # 早安陽光問候
        "https://i.pinimg.com/originals/65/d6/ca/65d6ca8877a01c7d2d31e9d43733f20f.jpg",  # 早安芭蕉葉
        "https://i.pinimg.com/originals/d1/27/7d/d1277da3e2cca7c5367c408dac59ccb9.jpg",  # 早安花環
        "https://i.pinimg.com/originals/df/9a/88/df9a88ffa207c8f176cc654505838e66.jpg",  # 早安咖啡方塊文字
        "https://i.pinimg.com/originals/20/c4/32/20c4329c822b4ec5d6d5fe0604c8ed68.jpg",  # 早安樹葉文字
        
        # Pixabay 早安文字圖片 (含明確早安/Good Morning 文字)
        "https://cdn.pixabay.com/photo/2017/11/06/17/05/good-morning-2924423_1280.jpg",  # 木牌早安文字
        "https://cdn.pixabay.com/photo/2019/12/07/04/17/good-morning-4678832_1280.jpg",  # 早安花卉文字
        "https://cdn.pixabay.com/photo/2018/02/13/22/02/good-morning-3151909_1280.jpg",  # 早安玫瑰
        "https://cdn.pixabay.com/photo/2016/03/09/16/16/woman-1246844_1280.jpg",    # 早安咖啡女孩
        
        # 早安場景圖片 (不含文字，但為早晨場景)
        "https://images.unsplash.com/photo-1552346989-e069318e20a5?w=800&q=80",     # 清晨咖啡
        "https://images.unsplash.com/photo-1470240731273-7821a6eeb6bd?w=800&q=80",  # 早安日出
        "https://images.unsplash.com/photo-1495197359483-d092478c170a?w=800&q=80",  # 早安花朵
        "https://images.unsplash.com/photo-1414609245224-afa02bfb3fda?w=800&q=80"   # 湖面日出
    ]
    
    # 選擇一張圖片
    image_url = random.choice(images)
    logger.info(f"選擇了圖片 URL: {image_url}")
    return image_url

def get_pinterest_image():
    """
    獲取早安圖片
    
    此函數是為了保持與原有代碼相容，實際上是直接下載圖片，不再使用 Pinterest
    
    Returns:
        str: 圖片的 URL
    """
    try:
        # 1. 嘗試直接從可靠圖庫獲取圖片 URL
        image_url = get_direct_image()
        logger.info(f"成功獲取早安圖片 URL: {image_url}")
        
        # 2. 可選：如果需要下載到本地儲存
        if os.environ.get("SAVE_IMAGES_LOCALLY", "false").lower() == "true":
            # 確保 images 目錄存在
            images_dir = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'images')
            if not os.path.exists(images_dir):
                os.makedirs(images_dir)
                logger.info(f"創建圖片目錄: {images_dir}")
            
            # 下載圖片
            logger.info(f"開始下載圖片...")
            try:
                response = requests.get(image_url, timeout=15)
                
                if response.status_code == 200:
                    # 保存圖片
                    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
                    filename = f"morning_image_{timestamp}.jpg"
                    filepath = os.path.join(images_dir, filename)
                    
                    logger.info(f"圖片大小: {len(response.content)} 字節")
                    logger.info(f"保存圖片到: {filepath}")
                    
                    with open(filepath, 'wb') as f:
                        f.write(response.content)
                    
                    logger.info(f"圖片下載並保存成功: {filepath}")
                    
                    # 如果需要上傳到圖床，可以在這裡調用上傳功能
                    
                    return filepath
                else:
                    logger.error(f"下載圖片失敗，狀態碼: {response.status_code}")
            except Exception as e:
                logger.error(f"下載圖片時發生錯誤: {str(e)}")

        # 如果不下載到本地或下載失敗，直接返回 URL
        return image_url
        
    except Exception as e:
        logger.error(f"獲取早安圖片失敗: {str(e)}", exc_info=True)
        return None

# 獨立運行時的測試代碼
if __name__ == "__main__":
    # 設定日誌
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s',
        handlers=[
            logging.StreamHandler()
        ]
    )
    
    logger.info("=== 測試早安圖片獲取 ===")
    result = get_pinterest_image()
    
    if result:
        if os.path.isfile(result):
            logger.info(f"成功下載圖片到本地: {result}")
            logger.info(f"檔案大小: {os.path.getsize(result) / 1024:.2f} KB")
        else:
            logger.info(f"成功獲取圖片 URL: {result}")
    else:
        logger.error("獲取早安圖片失敗")
