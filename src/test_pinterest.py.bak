#!/usr/bin/env python3
# filepath: /Users/al02451008/Documents/code/morning-post/src/test_pinterest.py
"""
直接下載圖片模組（取代原 Pinterest 爬蟲）
使用可靠的圖床服務直接獲取圖片，避免網站爬蟲問題
"""

import os
import random
import requests
import logging
from datetime import datetime

logger = logging.getLogger(__name__)

def get_direct_image():
    """直接從可靠圖庫獲取高品質圖片"""
    # 使用精選的免費圖庫圖片 - 只使用明確帶有早安文字和元素的正面圖片
    images = [
        # 精選早安文字圖片（帶有清晰明確的早安文字）
        "https://cdn.pixabay.com/photo/2019/05/16/16/50/good-morning-4207783_1280.jpg",  # Good Morning文字
        "https://cdn.pixabay.com/photo/2020/01/01/08/46/good-morning-4733716_1280.jpg",  # 早安咖啡文字
        "https://cdn.pixabay.com/photo/2022/11/20/03/45/good-morning-7604353_1280.jpg",  # 早安文字裝飾
        "https://cdn.pixabay.com/photo/2019/12/29/09/24/good-morning-4726156_1280.jpg",  # 早晨祝福文字
        "https://cdn.pixabay.com/photo/2019/11/29/14/38/good-morning-4662158_1280.jpg",  # 早安文字鮮花
        "https://cdn.pixabay.com/photo/2020/01/03/07/05/good-morning-4737913_1280.jpg",  # 美好早安標誌
        
        # 早晨咖啡與食物（明確的早晨元素）
        "https://cdn.pixabay.com/photo/2015/05/31/12/14/coffee-791439_1280.jpg",  # 早晨咖啡和麵包
        "https://cdn.pixabay.com/photo/2015/07/13/14/37/coffee-843278_1280.jpg",  # 精緻咖啡早餐
        "https://images.unsplash.com/photo-1552346989-e069318e20a5?w=800&q=80",  # 簡約清晨咖啡
        
        # 日出與陽光（清晨陽光，溫暖感）
        "https://cdn.pixabay.com/photo/2016/11/23/15/14/beach-1853442_1280.jpg",  # 清晨沙灘日出
        "https://cdn.pixabay.com/photo/2018/04/16/16/16/sunset-3325080_1280.jpg",  # 金色晨光
        "https://cdn.pixabay.com/photo/2014/04/05/11/39/dawn-316526_1280.jpg",  # 山間晨曦
        "https://cdn.pixabay.com/photo/2015/04/23/22/01/mountains-736886_1280.jpg",  # 山巒晨光
        
        # 花卉與自然
        "https://cdn.pixabay.com/photo/2015/04/19/08/32/rose-729509_1280.jpg",  # 晨露玫瑰
        "https://cdn.pixabay.com/photo/2015/12/01/20/28/green-1072828_1280.jpg",  # 清晨自然
        "https://cdn.pixabay.com/photo/2014/09/14/18/04/dandelion-445228_1280.jpg"  # 晨光中的蒲公英
    ]
    
    # 選擇一張圖片
    image_url = random.choice(images)
    logger.info(f"選擇了圖片 URL: {image_url}")
    return image_url

def get_pinterest_image():
    """
    獲取早安圖片
    
    此函數是為了保持與原有代碼相容，實際上是直接下載圖片，不再使用 Pinterest
    
    Returns:
        str: 圖片的 URL
    """
    try:
        # 1. 嘗試直接從可靠圖庫獲取圖片 URL
        image_url = get_direct_image()
        logger.info(f"成功獲取早安圖片 URL: {image_url}")
        
        # 2. 可選：如果需要下載到本地儲存
        if os.environ.get("SAVE_IMAGES_LOCALLY", "false").lower() == "true":
            # 確保 images 目錄存在
            images_dir = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'images')
            if not os.path.exists(images_dir):
                os.makedirs(images_dir)
                logger.info(f"創建圖片目錄: {images_dir}")
            
            # 下載圖片
            logger.info(f"開始下載圖片...")
            try:
                response = requests.get(image_url, timeout=15)
                
                if response.status_code == 200:
                    # 保存圖片
                    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
                    filename = f"morning_image_{timestamp}.jpg"
                    filepath = os.path.join(images_dir, filename)
                    
                    logger.info(f"圖片大小: {len(response.content)} 字節")
                    logger.info(f"保存圖片到: {filepath}")
                    
                    with open(filepath, 'wb') as f:
                        f.write(response.content)
                    
                    logger.info(f"圖片下載並保存成功: {filepath}")
                    
                    # 如果需要上傳到圖床，可以在這裡調用上傳功能
                    
                    return filepath
                else:
                    logger.error(f"下載圖片失敗，狀態碼: {response.status_code}")
            except Exception as e:
                logger.error(f"下載圖片時發生錯誤: {str(e)}")

        # 如果不下載到本地或下載失敗，直接返回 URL
        return image_url
        
    except Exception as e:
        logger.error(f"獲取早安圖片失敗: {str(e)}", exc_info=True)
        return None

# 獨立運行時的測試代碼
if __name__ == "__main__":
    # 設定日誌
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s',
        handlers=[
            logging.StreamHandler()
        ]
    )
    
    logger.info("=== 測試早安圖片獲取 ===")
    result = get_pinterest_image()
    
    if result:
        if os.path.isfile(result):
            logger.info(f"成功下載圖片到本地: {result}")
            logger.info(f"檔案大小: {os.path.getsize(result) / 1024:.2f} KB")
        else:
            logger.info(f"成功獲取圖片 URL: {result}")
    else:
        logger.error("獲取早安圖片失敗")