#!/usr/bin/env python3
# filepath: /Users/al02451008/Documents/code/morning-post/src/test_pinterest.py
"""
從網絡獲取早安圖片 (改進版) - 直接使用可靠的圖片 URL
"""

import os
import logging
from datetime import datetime
import requests
import random
import time

# 設定日誌
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('pinterest_test.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

def get_direct_image():
    """直接使用固定的高品質圖片 URL"""
    try:
        # 使用精選的免費圖庫圖片 (Pexels, Unsplash 等公開圖片)
        images = [
            "https://images.pexels.com/photos/1323550/pexels-photo-1323550.jpeg",  # 海灘日出
            "https://images.pexels.com/photos/1366957/pexels-photo-1366957.jpeg",  # 森林晨光
            "https://images.pexels.com/photos/1287075/pexels-photo-1287075.jpeg",  # 山景日出
            "https://images.pexels.com/photos/1591447/pexels-photo-1591447.jpeg",  # 湖泊清晨
            "https://images.pexels.com/photos/3363362/pexels-photo-3363362.jpeg",  # 咖啡清晨
            "https://images.unsplash.com/photo-1518707710579-8eef4dd8529a",       # 山頂日出
            "https://images.unsplash.com/photo-1506278329269-308b34a6f61c",       # 海上日出
            "https://images.unsplash.com/photo-1416339698242-2f4ae64f0663",       # 森林晨光
            "https://images.unsplash.com/photo-1461696114087-397271a7aedc",       # 寧靜的早晨
            "https://images.unsplash.com/photo-1490077042166-4d536f5ac9c0",       # 鄉村早晨
            "https://images.unsplash.com/photo-1526312419384-e8e92994a8b4",       # 早晨咖啡
            "https://images.unsplash.com/photo-1465071381026-9a042180be2f"        # 山景晨霧
        ]
        
        # 隨機選擇一張圖片
        image_url = random.choice(images)
        logger.info(f"選擇了直接圖片 URL: {image_url}")
        
        # 下載圖片
        response = requests.get(image_url, timeout=15)
        if response.status_code == 200:
            # 確保 images 目錄存在
            images_dir = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'images')
            if not os.path.exists(images_dir):
                os.makedirs(images_dir)
                logger.info(f"創建圖片目錄: {images_dir}")
                
            # 保存圖片
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            filename = f"morning_image_{timestamp}.jpg"
            filepath = os.path.join(images_dir, filename)
            
            with open(filepath, 'wb') as f:
                f.write(response.content)
                
            logger.info(f"圖片已保存為: {filepath}")
            return filepath
        else:
            logger.error(f"下載圖片失敗，狀態碼: {response.status_code}")
            return None
    except Exception as e:
        logger.error(f"下載圖片時發生錯誤: {str(e)}")
        return None

def get_pinterest_image():
    """獲取 Pinterest 圖片（改進版）- 實際上直接返回高品質圖片"""
    return get_direct_image()

if __name__ == "__main__":
    image_path = get_pinterest_image()
    if image_path:
        print(f"成功獲取圖片: {image_path}")
    else:
        print("獲取圖片失敗")
